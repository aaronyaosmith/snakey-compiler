/*
 * snakey compiler
 * inspired by https://docs.python.org/3/reference/grammar.html
 * and https://en.wikipedia.org/wiki/PL/0
 *
 * file: [statements] ENDMARKER 
 * statements: statement+ 
 * statement: compound_stmt | simple_stmts
 * simple_stmts:
 *     | simple_stmt !';' NEWLINE  # Not needed, there for speedup
 *     | ';'.simple_stmt+ [';'] NEWLINE 
 * simple_stmt:
 *     | assignment
 *     | return_stmt
 *     | 'pass' 
 *     | 'break' 
 *     | 'continue'
 * compound_stmt:
 *     | function_def
 *     | if_stmt
 *     | while_stmt
 * assignment: NAME '=' expr
 * return_stmt: 'return' expr
 * block:
 *     | NEWLINE INDENT statements DEDENT 
 *     | simple_stmts
 * function_def: 'def' NAME '(' params ')' ':' block
 * params: param*
 * param: param ',' | param &')'
 * if_stmt:
 *     | 'if' expr ':' block elif_stmt 
 *     | 'if' expr ':' block [else_block]
 * elif_stmt:
 *     | 'elif' expr ':' block elif_stmt 
 *     | 'elif' expr ':' block [else_block] 
 * else_block:
 *     | 'else' ':' block 
 * while_stmt:
 *     | 'while' expr ':' block
 * expr:
 *     | expr '==' sum
 *     | expr '<=' sum
 *     | expr '>=' sum
 *     | expr '<' sum
 *     | expr '>' sum
 *     | expr '!=' sum
 *     | 'not' expr
 *     | sum
 * sum:
 *     | sum '+' term 
 *     | sum '-' term 
 *     | term
 * term:
 *     | term '*' factor 
 *     | term '/' factor 
 *     | term '//' factor 
 *     | term '%' factor 
 *     | term '@' factor 
 *     | factor
 * factor: primary
 * primary:
 *     | primary '.' NAME 
 *     | primary '(' [arguments] ')' 
 *     | atom
 * atom:
 *     | NAME
 *     | 'True' 
 *     | 'False' 
 *     | 'None' 
 *     | strings
 *     | NUMBER
 * string: STRING 
 * strings: (string)+ 
 */
 